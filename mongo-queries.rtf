1.  Find all the information about each products         
fsd56wde> db.products.find() 

2.  Find the product price which are between 400 to 800
fsd56wde> db.products.find({$and:[{product_price:{$lte:600}},{product_price:{$gte:400}}]})

3. Find the product price which are not between 400 to 600
fsd56wde> db.products.find({$or:[{product_price:{$lte:400}},{product_price:{$gte:600}}]})

4. List the four product which are greater than 500 in price
fsd56wde> db.products.find({product_price:{$gte:500}}).limit(4)

 5. Find the product name and product material of each products
fsd56wde> db.products.find({},{product_name:true, product_material:true})

 6. Find the product with a row id of 10
fsd56wde> db.products.find({id:'10'})

 7. Find only the product name and product material
fsd56wde> db.products.find({},{_id:false, product_name:true, product_material:true})

8. Find all products which contain the value of soft in product material 
fsd56wde> db.products.aggregate([{$match:{product_material:"Soft"}}])
fsd56wde> db.products.find({product_material: /Soft/i})

9. Find products which contain product color indigo  and product price 492.00
fsd56wde> db.products.find({$and:[{product_color:'indigo'},{product_price:492}]})
fsd56wde> db.products.find({$or:[{product_color:'indigo'},{product_price:492}]})

10. Delete the products which product price value are same
fsd56wde> db.products.aggregate([{"$group":{_id:"$product_price",dups:{$push:"$_id"}}},{$match:{"dups.1":{$exists:true}}}]).forEach(function(doc){doc.dups.shift();db.products.remove({_id:{$in:doc.dups}});})
